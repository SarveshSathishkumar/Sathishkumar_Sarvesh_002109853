/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Encounter;
import model.Patient;
import model.Person;
import model.Person_directory;

/**
 *
 * @author sarveshzeke
 */
public class PersonDetails extends javax.swing.JPanel {

    /**
     * Creates new form PersonDetails
     */
    private JPanel userProcessor;
    private Person_directory person_directory;
    private Person person;
    //private JPanel userProcessContainer;
    Patient patient;
    DefaultTableModel model;
    Encounter en;
    
    public PersonDetails(JPanel userProcessor, Person_directory person_directory) {
        
       // addtotable();
        this.userProcessor = userProcessor;
        this.person_directory = new Person_directory();
        initComponents();
    }
//    private void addtotable()
//    {
//        Person person = person_directory.createAndAddPerson();
//        person.setPersonName("Achuthan");
//        person.setAge(22);
//        person.setContactno(987854675);
//        person.setCommunity("Community1");
//        person.setHouse("House1");
//        person.setCity("Boston");
//        person.getPatient().getAvailability();
//        
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        btnsave = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        patnametf1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        patagetf1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        patnotf1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        patcodetf1 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        Addbtn1 = new javax.swing.JButton();
        gotovitals = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        commcmbbx = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        housecmbbx = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        citycmbbx = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        tbl1.setBackground(new java.awt.Color(255, 204, 204));
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Contact No", "Zipcode", "Community", "House", "City", "Unique Reference", "Doctor Name"
            }
        ));
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        jLabel10.setText("Name");

        patnametf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patnametf1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Age");

        jLabel12.setText("Contact Number");

        jLabel13.setText("Zipcode");

        jButton9.setText("Back");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        Addbtn1.setText("Create");
        Addbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addbtn1ActionPerformed(evt);
            }
        });

        gotovitals.setText("Goto Vitals");
        gotovitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotovitalsActionPerformed(evt);
            }
        });

        jButton2.setText("Patient Entry");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Community");

        commcmbbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Asian", "American" }));

        jLabel2.setText("House");

        housecmbbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Northeastern", "Birmingham" }));

        jLabel3.setText("City");

        citycmbbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Boston", "New York", "Arizona", "Texas" }));

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel13))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(patagetf1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                            .addComponent(patnametf1)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(patcodetf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                            .addComponent(patnotf1, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(48, 48, 48))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(96, 96, 96)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(housecmbbx, javax.swing.GroupLayout.Alignment.LEADING, 0, 1, Short.MAX_VALUE)
                                    .addComponent(commcmbbx, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(citycmbbx, 0, 128, Short.MAX_VALUE))))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Addbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(26, 26, 26)
                        .addComponent(gotovitals, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE))
                .addGap(202, 202, 202))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {gotovitals, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patnametf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patagetf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(patnotf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(patcodetf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(commcmbbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(housecmbbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(citycmbbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9)
                            .addComponent(btnsave)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(Addbtn1)
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gotovitals, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(254, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {gotovitals, jButton2});

    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        if (checkBlankInput()==Boolean.TRUE)
        {
            Person person = person_directory.createAndAddPerson();

            person.setPersonName(patnametf1.getText());
            person.setAge(Integer.parseInt(patagetf1.getText()));
            person.setContactno(Integer.parseInt(patnotf1.getText()));
            person.setZipcode(Integer.parseInt(patcodetf1.getText()));
            person.setCommunity(commcmbbx.getSelectedItem().toString());
            person.setHouse(housecmbbx.getSelectedItem().toString());
            person.setCity(citycmbbx.getSelectedItem().toString());

            //person.setPatient(patient);

            JOptionPane.showMessageDialog(this, "Person added!!", "Update",
                JOptionPane.INFORMATION_MESSAGE);
            clearFields();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please enter all values",
                "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnsaveActionPerformed

    private void Addbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addbtn1ActionPerformed
        // TODO add your handling code here:

        populatePersonsTable(person_directory.getPerson_directory());

    }//GEN-LAST:event_Addbtn1ActionPerformed

    private void patnametf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patnametf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patnametf1ActionPerformed

    private void gotovitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotovitalsActionPerformed
        // TODO add your handling code here:
       VitalSign vss=  new VitalSign(userProcessor,patient,person_directory);
       userProcessor.add("vss", vss);
       CardLayout layout=(CardLayout) userProcessor.getLayout();
       layout.next(userProcessor);
       
    }//GEN-LAST:event_gotovitalsActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow= tbl1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.",
                "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Person person=(Person) tbl1.getValueAt(selectedRow, 0);
        if(person.getPatient()!=null)
        {
            JOptionPane.showMessageDialog(this, "Patient already exists.","Error",
            JOptionPane.ERROR_MESSAGE);
            return;
        }

        PatientDetails pd= new PatientDetails(userProcessor,person);
        userProcessor.add("pd", pd);
        CardLayout layout=(CardLayout) userProcessor.getLayout();
        layout.next(userProcessor);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow= tbl1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.", 
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Person person=(Person) tbl1.getValueAt(selectedRow, 0);
        /*pass userProcessContainer and Patient*/
//        ViewUpdatePersonDetailsJPanel vupersondJPanel= 
//                new ViewUpdatePersonDetailsJPanel(userProcessContainer, person,Boolean.TRUE);
//        userProcessContainer.add("vupersondJPanel", vupersondJPanel);
//        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
        
            EditPerson ep= new EditPerson(userProcessor, person);
            userProcessor.add("ep", ep);
            CardLayout layout=(CardLayout) userProcessor.getLayout();
            layout.next(userProcessor);
        
        
        
        
        
        
        
        
        
//        int selectedRow= tbl1.getSelectedRow();
//        if (selectedRow < 0) {
//            JOptionPane.showMessageDialog(this, "Please select a row from table.",
//                    "Error", JOptionPane.INFORMATION_MESSAGE);
//            return;
//        }
//        Person person=(Person) tbl1.getValueAt(selectedRow, 0);
//        /*pass userProcessContainer and Patient*/
//        Patient patient= person.getPatient();
//        if(patient!=null)
//        {
//            EditPerson ep=
//                    new EditPerson(userProcessor, patient);
//            userProcessor.add("ep", ep);
//            CardLayout layout=(CardLayout) userProcessor.getLayout();
//            layout.next(userProcessor);
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(this, "Patient not created, "
//                    + "Please create Patient first.", "Error", JOptionPane.ERROR_MESSAGE);
//        }
//        
        
        
        
//        EditPerson ep= new EditPerson(userProcessor,person);
//        userProcessor.add("ep", ep);
//        CardLayout layout=(CardLayout) userProcessor.getLayout();
//        layout.next(userProcessor);
        
//        model = (DefaultTableModel) tbl1.getModel();
//        
//        
//        Person person = person_directory.createAndAddPerson();
//        
//        String name = patnametf.getText();
//        int age = Integer.parseInt(patagetf.getText());
//        int contact = Integer.parseInt(patnotf.getText());
//        int Zipcode = Integer.parseInt(patcodetf.getText());
//        String community = commcmbbx.getSelectedItem().toString();
//        String house = housecmbbx.getSelectedItem().toString();
//        String city = citycmbbx.getSelectedItem().toString();
//        
//        
//                
//        
//        person.setPersonName(name);
//        person.setAge(age);
//        person.setContactno(contact);
//        person.setZipcode(Zipcode);
//        person.setCommunity(community);
//        person.setHouse(house);
//        person.setCity(city);
//        person.getPatient().getAvailability();
//        
//        model.setValueAt(name, tbl1.getSelectedRow(), 0);
//        model.setValueAt(age, tbl1.getSelectedRow(), 1);
//        model.setValueAt(contact, tbl1.getSelectedRow(), 2);
//        model.setValueAt(Zipcode, tbl1.getSelectedRow(), 3);
//        model.setValueAt(community, tbl1.getSelectedRow(), 4);
//        model.setValueAt(house, tbl1.getSelectedRow(), 5);
//        model.setValueAt(city, tbl1.getSelectedRow(), 6);
//        
//        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        // TODO add your handling code here:
//         model = (DefaultTableModel) tbl1.getModel();
//
//        String tblname = tbl1.getValueAt(tbl1.getSelectedRow(), 0).toString();
//        String tblage = tbl1.getValueAt(tbl1.getSelectedRow(), 1).toString();
//        String tblno = tbl1.getValueAt(tbl1.getSelectedRow(), 2).toString();
//        String tblzip = tbl1.getValueAt(tbl1.getSelectedRow(), 3).toString();
//        String community = tbl1.getValueAt(tbl1.getSelectedRow(), 4).toString();
//        String house = tbl1.getValueAt(tbl1.getSelectedRow(), 5).toString();
//        String city = tbl1.getValueAt(tbl1.getSelectedRow(), 6).toString();
//        
//        patnametf.setText(tblname);
//        patagetf.setText(tblage);
//        patnotf.setText(tblno);
//        patcodetf.setText(tblzip);
//        commcmbbx.setSelectedItem(community);
//        housecmbbx.setSelectedItem(house);
//        citycmbbx.setSelectedItem(city);
//       
    }//GEN-LAST:event_tbl1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow= tbl1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.", 
                    "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Person person=(Person) tbl1.getValueAt(selectedRow, 0);
        /*Ask confirmation*/
        int flag= JOptionPane.showConfirmDialog(this, "Are you sure want to remove?",
                "Warning", JOptionPane.YES_NO_OPTION);
        if(flag==0)
        {
            person_directory.deletePerson(person);
            populatePersonsTable(person_directory.getPerson_directory());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

     private void clearFields()
    {
        patnametf1.setText("");
        patagetf1.setText("");
        patnotf1.setText("");
        patcodetf1.setText("");
    }
    private Boolean checkBlankInput()
    {
        if(patnametf1.getText().length()==0
                ||patagetf1.getText().length()==0)
        {
            return false;
        }
        else{
            return true;
        }
    }
    public void populatePersonsTable(ArrayList<Person> persondetails) {
        DefaultTableModel model = (DefaultTableModel) tbl1.getModel();
        model.setRowCount(0);
        if(persondetails.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No Person's found. Please add"
                    + " Person's", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        for (Person person : persondetails) {
            Object[] row = new Object[9];
            row[0] = person;
            row[1]=  person.getAge();
            row[2] = person.getContactno();
            row[3] = person.getZipcode();
            row[4] = person.getCommunity();
            row[5] = person.getHouse();
            row[6] = person.getCity();
            if(person.getPatient()!=null)
            {
                row[7] = person.getPatient().getAvailability();
            }
            else
            {
                row[7] = "Not a Patient";
            }
            if(person.getPatient()!=null)
            {
                row[8] = person.getPatient().getDoctorName();
            }
            else
            {
                row[8] = "Not Assigned";
            }
            model.addRow(row);
        }
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn1;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox<String> citycmbbx;
    private javax.swing.JComboBox<String> commcmbbx;
    private javax.swing.JButton gotovitals;
    private javax.swing.JComboBox<String> housecmbbx;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patagetf1;
    private javax.swing.JTextField patcodetf1;
    private javax.swing.JTextField patnametf1;
    private javax.swing.JTextField patnotf1;
    private javax.swing.JTable tbl1;
    // End of variables declaration//GEN-END:variables
}
